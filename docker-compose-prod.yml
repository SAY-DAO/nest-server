version: '3.6'
services:
  api:
    image: ${CONTAINER_IMAGE:-backend}
    volumes:
      - uploads_volume:/usr/src/app/uploads
    depends_on:
      - db
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: say_dapp
      DB_PASS: /run/secrets/postgres-password
    secrets:
      - postgres-password
    networks:
      - default
      - traefik-public
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
      placement:
        constraints:
          - node.labels.${ENVIRONMENT} == true
      mode: replicated
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${STACK_NAME}-dapp-backend-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME}-dapp-backend-http.rule=HostRegexp(`{www:(www.)?}${DOMAIN?Variable not set}`)
        - traefik.http.routers.${STACK_NAME}-dapp-backend-http.service=${STACK_NAME}-dapp-backend
        - traefik.http.routers.${STACK_NAME}-dapp-backend-http.middlewares=https-redirect
        - traefik.http.routers.${STACK_NAME}-dapp-backend.entrypoints=https
        - traefik.http.routers.${STACK_NAME}-dapp-backend.rule=HostRegexp(`{www:(www.)?}${DOMAIN?Variable not set}`)
        - traefik.http.routers.${STACK_NAME}-dapp-backend.service=${STACK_NAME}-dapp-backend
        - traefik.http.routers.${STACK_NAME}-dapp-backend.tls=true
        - traefik.http.routers.${STACK_NAME}-dapp-backend.tls.certresolver=le
        - traefik.http.services.${STACK_NAME}-dapp-backend.loadbalancer.server.port=8002
        - traefik.http.middlewares.www-redirect.redirectregex.regex=https://(www.)?(.*)
        - traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$$2
        - traefik.http.routers.${STACK_NAME}-dapp-backend.middlewares=www-redirect

  db:
    image: postgres:12
    secrets:
      - postgres-password
    environment:
      POSTGRES_DB: say_dapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: stop-first
      placement:
        constraints:
          - node.labels.${ENVIRONMENT} == true

volumes:
  postgres_volume:
  uploads_volume:

networks:
  traefik-public:
    external: true

secrets:
  postgres-password:
    name: ${STACK_NAME}-postgres-password
    external: true
